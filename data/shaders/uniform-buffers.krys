layout (std140, binding = 0) uniform Shared
{
  mat4 u_ViewProjection;
  vec4 u_CameraPosition;
};

struct DirectionalLight
{
  vec4 Ambient;
  vec4 Diffuse;
  vec4 Specular;

  bool Enabled;
  float Intensity;

  vec4 Direction;
};

struct PointLight
{
  vec4 Ambient;
  vec4 Diffuse;
  vec4 Specular;

  float Constant;
  float Linear;
  float Quadratic;

  bool Enabled;
  float Intensity;
  float FarPlane;

  vec4 Position;
};

struct SpotLight
{
  vec4 Ambient;
  vec4 Diffuse;
  vec4 Specular;

  float Constant;
  float Linear;
  float Quadratic;

  bool Enabled;
  float Intensity;

  vec4 Direction;
  vec4 Position;

  float InnerCutoff;
  float OuterCutoff;
};

struct DirectionalShadowCaster
{
  float Bias;
  int LightIndex;
  int ShadowMapResolution;
  vec2 NearFarPlane;
  mat4 LightSpaceMatrix;
};

struct PointLightShadowCaster
{
  float Bias;
  int LightIndex;
  int ShadowMapResolution;
  vec2 NearFarPlane;
  mat4 LightSpaceMatrices[6];
};

struct SpotLightShadowCaster
{
  float Bias;
  int LightIndex;
  int ShadowMapResolution;
  vec2 NearFarPlane;
  mat4 LightSpaceMatrix;
};

#define MAX_DIRECTIONAL_LIGHTS 1
#define MAX_DIRECTIONAL_SHADOW_CASTERS 1

#define MAX_POINT_LIGHTS 1
#define MAX_POINT_LIGHT_SHADOW_CASTERS 1

#define MAX_SPOT_LIGHTS 1
#define MAX_SPOT_LIGHT_SHADOW_CASTERS 1

layout (std140, binding = 1) uniform Lights
{
  DirectionalLight u_DirectionalLights[MAX_DIRECTIONAL_LIGHTS];
  DirectionalShadowCaster u_DirectionalShadowCasters[MAX_DIRECTIONAL_SHADOW_CASTERS];
  int u_DirectionalLightCount;
  int u_DirectionalShadowCasterCount;

  PointLight u_PointLights[MAX_POINT_LIGHTS];
  PointLightShadowCaster u_PointLightShadowCasters[MAX_POINT_LIGHT_SHADOW_CASTERS];
  int u_PointLightCount;
  int u_PointLightShadowCasterCount;

  SpotLight u_SpotLights[MAX_SPOT_LIGHTS];
  SpotLightShadowCaster u_SpotLightShadowCasters[MAX_SPOT_LIGHT_SHADOW_CASTERS];
  int u_SpotLightCount;
  int u_SpotLightShadowCasterCount;

  int u_Texture2DShadowMapSlotIndex;
  int u_CubemapShadowMapSlotIndex;

  bool u_LightingEnabled;
  bool u_ShadowsEnabled;

  bool u_UseBlinnLightingModel;
};
